{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Interlocutor/Interlocutor.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/PostForm/PostForm.module.css","components/Dialogs/Interlocutor/Interlocutor.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/PostForm/PostForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["mapAuthorizedStateToProps","state","isAuthorized","auth","withAuthRedirect","Component","connect","props","undefined","to","module","exports","Interlocutor","className","styles","interlocutor","avatar","src","avatarSrc","alt","name","dialogId","activeClassName","name_active","Message","message","info","authorName","author","text","maxLength300","maxLength","reduxForm","form","onSubmit","handleSubmit","postForm","Field","component","ValidatedInput","validate","required","inputText","type","submit","Dialogs","content","dialogs","interlocutors","map","i","key","fields","sendMessage","messages","m","side","message_right","message_left","compose","dialogsPage"],"mappings":"0IAAA,8EAKA,SAASA,EAA0BC,GACjC,MAAO,CACLC,aAAcD,EAAME,KAAKD,cAItB,SAASE,EAAiBC,GAM/B,OAAOC,YAAQN,EAARM,EALP,SAA+BC,GAC7B,OAA2B,IAAvBA,EAAML,aAA8B,kBAACG,EAAcE,QAC5BC,IAAvBD,EAAML,aAAmC,kBAAC,IAAD,MACtC,kBAAC,IAAD,CAAUO,GAAG,gB,oBCdxBC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,0BAA0B,cAAgB,+BAA+B,aAAe,gC,oBCAhOD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,6BAA6B,KAAO,2BAA2B,YAAc,oC,oBCA1JD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,wB,oBCA1HD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,OAAS,2B,yHCY1FC,MATf,SAAsBL,GACpB,OACE,0BAAMM,UAAWC,IAAOC,cACtB,yBAAKF,UAAWC,IAAOE,OAAQC,IAAKV,EAAMN,MAAMiB,UAAWC,IAAI,KAC/D,kBAAC,IAAD,CAASN,UAAWC,IAAOM,KAAMX,GAAE,mBAAcF,EAAMN,MAAMoB,UAAYC,gBAAiBR,IAAOS,aAAchB,EAAMN,MAAMmB,Q,kBCQlHI,MAbf,SAAiBjB,GACf,OACE,yBAAKM,UAAWC,IAAOW,SACrB,yBAAKZ,UAAWC,IAAOY,MACrB,yBAAKb,UAAWC,IAAOE,OAAQC,IAAI,2GAA2GE,IAAI,KAClJ,0BAAMN,UAAWC,IAAOa,YAAapB,EAAMN,MAAM2B,SAEvD,yBAAKf,UAAWC,IAAOe,MAAOtB,EAAMN,MAAM4B,Q,oDCJxCC,EAAeC,YAAU,KAYdC,kBAAU,CAAEC,KAAM,YAAlBD,EAVf,SAAkBzB,GAChB,OACE,0BAAM2B,SAAU3B,EAAM4B,aAActB,UAAWC,IAAOsB,UACpD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAgBC,SAAU,CAACC,IAAUX,GAAeV,KAAK,UAAUP,UAAWC,IAAO4B,UAAWC,KAAK,SACvH,4BAAQ9B,UAAWC,IAAO8B,QAA1B,YCkBSC,MAxBf,SAAiBtC,GAIf,OACE,0BAAMM,UAAWC,IAAOgC,SACtB,wBAAIjC,UAAWC,IAAOiC,SACnBxC,EAAMyC,cAAcC,KAAI,SAAClC,EAAcmC,GAAf,OAAqB,wBAAIC,IAAKD,GAAG,kBAAC,EAAD,CAAcjD,MAAOc,SAEjF,yBAAKF,UAAWC,IAAOsB,UACrB,kBAAC,EAAD,CAAUF,SAThB,SAA8BkB,GAC5B7C,EAAM8C,YAAYD,EAAO3B,aAUvB,yBAAKZ,UAAWC,IAAOwC,UACpB/C,EAAM+C,SAASL,KAAI,SAASM,EAAGL,GAC9B,MAAe,UAAXK,EAAEC,KACG,yBAAK3C,UAAWC,IAAO2C,cAAeN,IAAKD,GAAG,kBAAC,EAAD,CAASjD,MAAOsD,KAEhE,yBAAK1C,UAAWC,IAAO4C,aAAcP,IAAKD,GAAG,kBAAC,EAAD,CAASjD,MAAOsD,W,gBCT/DI,sBACbvD,IACAE,aAVF,SAAyBL,GACvB,MAAO,CACL+C,cAAe/C,EAAM2D,YAAYZ,cACjCM,SAAUrD,EAAM2D,YAAYN,SAC5BpD,aAAcD,EAAME,KAAKD,gBAMF,CAAEmD,kBAFdM,CAGbd","file":"static/js/4.9c267c7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../components/common/Preloader';\r\n\r\nfunction mapAuthorizedStateToProps(state) {\r\n  return {\r\n    isAuthorized: state.auth.isAuthorized\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect(Component) {\r\n  function AuthRedirectComponent(props) {\r\n    if (props.isAuthorized === true) return <Component {...props} />; // authorized\r\n    if (props.isAuthorized === undefined) return <Preloader />; // pending\r\n    return <Redirect to='/login' />; // not authorized\r\n  }\r\n  return connect(mapAuthorizedStateToProps)(AuthRedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__2vJ-X\",\"dialogs\":\"Dialogs_dialogs__2WJfv\",\"postForm\":\"Dialogs_postForm__26KW6\",\"messages\":\"Dialogs_messages__3Pzni\",\"message_right\":\"Dialogs_message_right__2gChp\",\"message_left\":\"Dialogs_message_left__19XG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interlocutor\":\"Interlocutor_interlocutor__3F6CY\",\"avatar\":\"Interlocutor_avatar__2dx8k\",\"name\":\"Interlocutor_name__1vgfw\",\"name_active\":\"Interlocutor_name_active__2hnYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2C4Ka\",\"info\":\"Message_info__1y5WU\",\"avatar\":\"Message_avatar__tdL1o\",\"text\":\"Message_text__2C-lD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"PostForm_postForm__2QzLb\",\"inputText\":\"PostForm_inputText__1Tes7\",\"submit\":\"PostForm_submit__LhJRl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Interlocutor.module.css';\r\n\r\nfunction Interlocutor(props) {\r\n  return (\r\n    <span className={styles.interlocutor}>\r\n      <img className={styles.avatar} src={props.state.avatarSrc} alt=''></img>\r\n      <NavLink className={styles.name} to={`/dialogs/${props.state.dialogId}`} activeClassName={styles.name_active}>{props.state.name}</NavLink>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Interlocutor;","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nfunction Message(props) {\r\n  return (\r\n    <div className={styles.message}>\r\n      <div className={styles.info}>\r\n        <img className={styles.avatar} src='https://img.favpng.com/8/0/5/computer-icons-user-profile-avatar-png-favpng-6jJk1WU2YkTBLjFs4ZwueE8Ub.jpg' alt=''></img>\r\n        <span className={styles.authorName}>{props.state.author}</span>\r\n      </div>\r\n  <div className={styles.text}>{props.state.text}</div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './PostForm.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { ValidatedInput } from '../../common/ValidatedComponents';\r\nimport { required, maxLength } from '../../../utils/validators';\r\n\r\nlet maxLength300 = maxLength(300);\r\n\r\nfunction PostForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={styles.postForm}>\r\n      <Field component={ValidatedInput} validate={[required, maxLength300]} name=\"message\" className={styles.inputText} type='text' />\r\n      <button className={styles.submit}>Send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nexport default reduxForm({ form: \"postForm\" })(PostForm);","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport Interlocutor from './Interlocutor/Interlocutor';\r\nimport Message from './Message/Message';\r\nimport PostForm from './PostForm/PostForm';\r\n\r\nfunction Dialogs(props) {\r\n  function handlePostFormSubmit(fields) {\r\n    props.sendMessage(fields.message);\r\n  }\r\n  return (\r\n    <main className={styles.content}>\r\n      <ul className={styles.dialogs}>\r\n        {props.interlocutors.map((interlocutor, i) => <li key={i}><Interlocutor state={interlocutor}/></li>)}\r\n      </ul>\r\n      <div className={styles.postForm}>\r\n        <PostForm onSubmit={handlePostFormSubmit} />\r\n      </div>\r\n      <div className={styles.messages}>\r\n        {props.messages.map(function(m, i) {\r\n          if (m.side === \"right\") {\r\n            return <div className={styles.message_right} key={i}><Message state={m} /></div>\r\n          }\r\n          return <div className={styles.message_left} key={i}><Message state={m} /></div>\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import { sendMessage } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    interlocutors: state.dialogsPage.interlocutors,\r\n    messages: state.dialogsPage.messages,\r\n    isAuthorized: state.auth.isAuthorized\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { sendMessage })\r\n)(Dialogs);"],"sourceRoot":""}